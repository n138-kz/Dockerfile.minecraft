# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  workflow_dispatch:
  push:
#    paths:
#      - "./build_container_bot/**"
#      - ".github/workflows/python-app.yml"

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: "Install dependencies: pip"
      working-directory: ./build_container_bot/
      run: python -m pip install --upgrade pip

    - name: "Install dependencies: flake8 pytest"
      working-directory: ./build_container_bot/
      run: pip install flake8 pytest

    - name: "Install dependencies: requirements.txt"
      working-directory: ./build_container_bot/
      run: cat requirements.txt | nl -ba; pip install -r requirements.txt

    - name: Lint with flake8
      working-directory: ./build_container_bot/
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      working-directory: ./build_container_bot/
      # Exit code 0: All tests were collected and passed successfully
      # Exit code 1: Tests were collected and run but some of the tests failed
      # Exit code 2: Test execution was interrupted by the user
      # Exit code 3: Internal error happened while executing tests
      # Exit code 4: pytest command line usage error
      # Exit code 5: No tests were collected
      run: |
        pytest *.py

    - name: Run
      working-directory: ./build_container_bot/
      run: python3 *.py

    - if: always()
      working-directory: ./build_container_bot/
      run: |
        ls -lhA

    - if: always()
      working-directory: ./build_container_bot/
      run: |
        tree

    - if: always()
      working-directory: ./build_container_bot/
      run: |
        env | grep ^GITHUB

    - name: upload login-notice.json
      uses: actions/upload-artifact@v4
      if: false
      with:
        name: sample-config
        path: ./build_container_bot/login-notice.json
