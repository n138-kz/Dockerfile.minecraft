name: Docker Container for minecraft-server

on:
  workflow_dispatch:
  push:
#    paths-ignore:
#      - "**.md"
#      - "**.yml"
#      - "**.html"

permissions:
  contents: read

jobs:
  send_github_context:
    uses: n138-kz/n138-kz/.github/workflows/github-act_send_github_context.yml@main
    # https://github.com/n138-kz/n138-kz/blob/main/.github/workflows/github-act_send_github_context.yml
    secrets: inherit # pass all secrets

  env:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "API access: https://ipinfo.io/json"
        run: curl -s https://ipinfo.io/json | jq

  iso8601:
    runs-on: ubuntu-latest
    outputs:
      iso_date: ${{ steps.set_date.outputs.iso_date }}
    steps:
      - name: Set ISO 8601 date as an environment variable
        id: set_date
        run: |
          echo "ISO_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          
      - name: Use the ISO 8601 date variable
        run: |
          echo "::notice title=ISO 8601 Date::The current ISO 8601 date is: ${{ steps.set_date.outputs.iso_date }}"
          echo "The current ISO 8601 date is: ${{ steps.set_date.outputs.iso_date }}"

  Pull_the_image_almalinux-8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: docker pull almalinux:8

  Pull_the_image_ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: docker pull ubuntu:latest

  Pull_the_image_alpine:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: docker pull alpine

  Git_clone_Tiiffi-mcrcon:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: git clone https://github.com/Tiiffi/mcrcon.git

  build:
    runs-on: ubuntu-latest
    needs: 
      - Pull_the_image_almalinux-8
      - Pull_the_image_ubuntu
      - Pull_the_image_alpine
      - Git_clone_Tiiffi-mcrcon
      - iso8601

    steps:
      - uses: actions/checkout@v4

      - name: "Pull the image: phpmyadmin/phpmyadmin"
        if: false
        run: docker pull phpmyadmin/phpmyadmin

      - name: "Pull the image: mysql"
        if: false
        run: docker pull mysql

      - name: "Pull the image: ubuntu:latest"
        run: docker pull ubuntu:latest

      - name: "Pull the image: almalinux:8"
        run: docker pull almalinux:8

      - name: "Pull the image: alpine"
        run: docker pull alpine

      - name: Print the Compose config
        run: docker compose config

      - name: "Build the Docker container: minecraft-core"
        run: docker compose build --no-cache minecraft-core

      - name: "Build the Docker container: minecraft-rcon"
        run: docker compose build --no-cache minecraft-rcon

      - name: "Build the Docker container: minecraft-bot"
        run: docker compose build --no-cache minecraft-bot

      - name: Build the Docker container
        run: docker compose build --no-cache

      - name: Up check the Docker container
        run: docker compose up -d

      - name: Waiting for 30s
        run: sleep 30

      - name: "Log show the Docker container"
        run: docker compose logs

      - name: "server.properties"
        run: docker compose exec -it minecraft-core cat server.properties

      - name: "mcrcon -t list"
        run: docker compose exec -it minecraft-rcon mcrcon list

      - name: "ls show the Docker containers"
        run: docker compose ls

      - name: "ps show the Docker containers"
        run: docker compose ps

      - name: "Log show the Docker container: minecraft-core"
        run: docker compose logs minecraft-core

      - name: "Log show the Docker container: minecraft-rcon"
        run: docker compose logs minecraft-rcon

      - name: "Log show the Docker container: minecraft-bot"
        run: docker compose logs minecraft-bot
